name: Download and Display Artifact

on:
  workflow_dispatch:
    inputs:
      source_repository:
        description: "Owner/Repository name (e.g., 'my-org/my-repo')"
        required: true
      source_workflow_name:
        description: "Name of the workflow that created the artifact"
        required: false
      source_workflow_run_id:
        description: "Run ID of the workflow that created the artifact"
        required: false
      artifact_name:
        description: "Name of the artifact to download"
        required: true
env:
  REPO: ${{ github.event.inputs.source_repository }}
  WORKFLOW_NAME: ${{ github.event.inputs.source_workflow_name }}
jobs:
  Grab_Workflow_Run_ID:
    runs-on: ubuntu-latest
    steps:

    - name: Get Workflow and Run ID
      id: get_ids
      run: |
        WORKFLOW_ID=$(gh workflow list --repo "${{ env.REPO }}" --json id,name | jq -r '.[] | select(.name == "Build and Archive Artifact") | .id')
        echo "workflow_id=$WORKFLOW_ID" >> $GITHUB_ENV
        WORKFLOW_RUN_ID=$(gh run list -w $WORKFLOW_ID --repo ${{ env.REPO }} -L 1 --json databaseId | jq -r '.[] | .databaseId')
        echo "workflow_run_id=$WORKFLOW_RUN_ID" >> $GITHUB_OUTPUT
        echo "This is the workflow ID: $WORKFLOW_ID"
        echo "This is the workflow run ID: $WORKFLOW_RUN_ID"
    outputs:
      workflow_run_id: ${{ steps.get_ids.outputs.workflow_run_id }}

  download_and_display:
    needs: 
      - Grab_Workflow_Run_ID
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ github.event.inputs.artifact_name }}
        repository: ${{ env.REPO }}
        run-id: ${{ needs.Grab_Workflow_Run_ID.outputs.workflow_run_id}}

    - name: Display Artifact Contents
      run: ls -R .

    - name: Display specific file in artifact
      run: cat artifact/hello.txt
